#ifndef OBJECT_H
#define OBJECT_H

#include <stdint.h>
#include "file.h"

typedef struct _object {
    uint32_t    move_counter;          // 0x00
    uint32_t    run_counter;           // 0x04
    uint32_t    invincible;            // 0x08
    uint32_t    _unknown1;             // 0x0C
    int32_t     x;                     // 0x10
    int32_t     y;                     // 0x14
    uint32_t    z;                     // 0x18
    uint32_t    _unknown2;             // 0x1C
    uint32_t    attacks;               // 0x20
    uint32_t    _unknown3;             // 0x24
    double      pic_x_gain;            // 0x28
    double      y_accl;                // 0x30
    double      z_accl;                // 0x38
    double      x_velocity;            // 0x40
    double      y_velocity;            // 0x48
    double      z_velocity;            // 0x50
    double      x_position;            // 0x58
    double      y_position;            // 0x60
    double      z_position;            // 0x68
    uint32_t    frame_id1;             // 0x70
    uint32_t    frame_id2;             // 0x74
    uint32_t    frame_id3;             // 0x78
    uint32_t    frame_id4;             // 0x7C
    uint8_t     facing;                // 0x80
    uint8_t     _unknown4;             // 0x81
    uint8_t     _unknown5;             // 0x82
    uint8_t     _unknown6;             // 0x83
    uint32_t    _unknown7;             // 0x84
    uint32_t    wait_counter;          // 0x88
    uint32_t    cpoint_catcher;        // 0x8C
    uint32_t    cpoint_timer;          // 0x90
    uint32_t    _unknown8;             // 0x94
    uint32_t    weapon_type;           // 0x98
    uint32_t    weapon_id;             // 0x9C
    uint32_t    holder_id;             // 0xA0
    uint32_t    _unknown9;             // 0xA4
    uint32_t    _unknown10;            // 0xA8
    uint32_t    _unknown11;            // 0xAC
    uint32_t    fall;                  // 0xB0
    int32_t     shaking;               // 0xB4
    uint32_t    bdefend;               // 0xB8
    uint8_t     _unknown12;            // 0xBC
    uint8_t     _unknown13;            // 0xBD
    uint8_t     _unknown14;            // 0xBE
    uint8_t     _unknown15;            // 0xBF
    uint8_t     _unknown16;            // 0xC0
    uint8_t     _unknown17;            // 0xC1
    uint8_t     _unknown18;            // 0xC2
    uint8_t     _unknown19;            // 0xC3
    uint8_t     _unknown20;            // 0xC4
    uint8_t     _unknown21;            // 0xC5
    uint8_t     holding_up;            // 0xC6
    uint8_t     holding_down;          // 0xC7
    uint8_t     holding_left;          // 0xC8
    uint8_t     holding_right;         // 0xC9
    uint8_t     holding_attack;        // 0xCA
    uint8_t     holding_jump;          // 0xCB
    uint8_t     holding_defend;        // 0xCC
    uint8_t     click_up;              // 0xCD
    uint8_t     click_down;            // 0xCE
    uint8_t     click_left;            // 0xCF
    uint8_t     click_right;           // 0xD0
    uint8_t     click_attack;          // 0xD1
    uint8_t     click_jump;            // 0xD2
    uint8_t     click_defend;          // 0xD3
    uint8_t     click_DRA;             // 0xD4
    uint8_t     click_DLA;             // 0xD5
    uint8_t     click_DUA;             // 0xD6
    uint8_t     click_DDA;             // 0xD7
    uint8_t     click_DRJ;             // 0xD8
    uint8_t     click_DLJ;             // 0xD9
    uint8_t     click_DUJ;             // 0xDA
    uint8_t     click_DDJ;             // 0xDB
    uint8_t     click_DJA;             // 0xDC
    uint8_t     _unknown22;            // 0xDD
    uint8_t     _unknown23;            // 0xDE
    uint8_t     _unknown24;            // 0xDF
    uint32_t    curing_hp;             // 0xE0
    uint32_t    _unknown25;            // 0xE4
    uint32_t    _unknown26;            // 0xE8
    uint32_t    arest;                 // 0xEC
    uint8_t     vrest_of_objects[400]; // 0xF0
    uint32_t    injured_of_attack[20]; // 0x280
    uint8_t     itr_of_attack[20];     // 0x2D0
    uint32_t    successful_attacks;    // 0x2E4
    uint32_t    _unknown27;            // 0x2E8
    uint32_t    _unknown28;            // 0x2EC
    uint32_t    _unknown29;            // 0x2F0
    uint32_t    clone;                 // 0x2F4
    uint32_t    _unknown30;            // 0x2F8
    int32_t     hp;                    // 0x2FC
    int32_t     dark_hp;               // 0x300
    int32_t     max_hp;                // 0x304
    int32_t     mp;                    // 0x308
    uint32_t    _unknown31;            // 0x30C
    uint32_t    _unknown32;            // 0x310
    uint32_t    _unknown33;            // 0x314
    uint32_t    pic_no_gain;           // 0x318
    int32_t     drink_hp;              // 0x31C
    uint32_t    thrown_injury;         // 0x320
    uint32_t    _unknown34;            // 0x324
    uint32_t    _unknown35;            // 0x328
    uint32_t    _unknown36;            // 0x32C
    uint32_t    _unknown37;            // 0x330
    uint32_t    _unknown38;            // 0x334
    uint32_t    firen_counter;         // 0x338
    uint32_t    _unknown39;            // 0x33C
    uint32_t    armor_multiplier;      // 0x340
    uint32_t    _unknown40;            // 0x344
    uint32_t    total_attack;          // 0x348
    uint32_t    hp_lost;               // 0x34C
    uint32_t    mp_used;               // 0x350
    uint32_t    owner;                 // 0x354
    uint32_t    kills;                 // 0x358
    uint32_t    get_weapon_counter;    // 0x35C
    uint32_t    enemy;                 // 0x360
    uint32_t    team;                  // 0x364
    file        * file;                // 0x368
} object;

#endif
